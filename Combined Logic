// Pins
const int in = 8;           // Echo pin
const int out = 9;          // Trigger pin
const int green = 10;
const int orange = 11;
const int red = 12;
const int buzz = 13;
const int waterSensorPin = A0;  // Water level analog input

void setup() {
  Serial.begin(9600);

  pinMode(in, INPUT);
  pinMode(out, OUTPUT);
  pinMode(green, OUTPUT);
  pinMode(orange, OUTPUT);
  pinMode(red, OUTPUT);
  pinMode(buzz, OUTPUT);
  pinMode(waterSensorPin, INPUT);

  digitalWrite(green, LOW);
  digitalWrite(orange, LOW);
  digitalWrite(red, LOW);
  digitalWrite(buzz, LOW);

  delay(1000);  // Wait before monitoring starts
}

void loop() {
  long dur;
  float dist;
  int per;

  // Trigger ultrasonic pulse
  digitalWrite(out, LOW);
  delayMicroseconds(2);
  digitalWrite(out, HIGH);
  delayMicroseconds(10);
  digitalWrite(out, LOW);

  // Read ultrasonic duration
  dur = pulseIn(in, HIGH);
  dist = (dur * 0.034) / 2;  // Distance in cm

  // Map ultrasonic distance to % (adjust 30 and 5 to your actual setup)
  per = map(dist, 30, 5, 0, 100);

  if (per < 0) per = 0;
  if (per > 100) per = 100;

  // Read water level sensor (raw value from 0â€“1023)
  int waterRaw = analogRead(waterSensorPin);
  int waterPercent = map(waterRaw, 0, 1023, 0, 100);  // Approximate water contact level

  // Print both readings
  Serial.print("Ultrasonic Level: ");
  Serial.print(per);
  Serial.print("% | Water Sensor: ");
  Serial.print(waterPercent);
  Serial.println("%");

  // ðŸŸ¡ Condition 1: Early water contact
  if (waterPercent > 20 && per < 20) {
    Serial.println("Early water detection!");
    digitalWrite(green, LOW);
    digitalWrite(orange, HIGH);
    digitalWrite(red, LOW);
    digitalWrite(buzz, HIGH);
    delay(1000);
    digitalWrite(buzz, LOW);
  }

  // ðŸ”´ Condition 2: Water rising fast or high flood risk
  else if (per >= 40) {
    Serial.println("FLOOD ALERT!");
    digitalWrite(green, LOW);
    digitalWrite(orange, LOW);
    digitalWrite(red, HIGH);
    digitalWrite(buzz, HIGH);
    delay(1000);
    digitalWrite(buzz, LOW);
    delay(1000);
  }

  // ðŸŸ  Condition 3: Medium level
  else if (per >= 20) {
    Serial.println("Moderate water level.");
    digitalWrite(green, LOW);
    digitalWrite(orange, HIGH);
    digitalWrite(red, LOW);
    digitalWrite(buzz, HIGH);
    delay(1000);
    digitalWrite(buzz, LOW);
  }

  // ðŸŸ¢ Condition 4: Safe level
  else {
    Serial.println("Water level normal.");
    digitalWrite(green, HIGH);
    digitalWrite(orange, LOW);
    digitalWrite(red, LOW);
    digitalWrite(buzz, LOW);
  }

  delay(3000);  // Delay before next reading
}
